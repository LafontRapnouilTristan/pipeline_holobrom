cmd <- paste0("grep -c '@' " ,path[1:2])
ali <- system(cmd[1],intern = T)
qualali <- system(cmd[2],intern = T)
#fasta
cmd <- paste0("grep -c '>' " ,path[3:8])
dml <- system(cmd[1],intern = T)
basicfilt <- system(cmd[2],intern = T)
derep <- system(cmd[3],intern = T)
clean <- system(cmd[4],intern = T)
clust <- system(cmd[5],intern = T)
agg <- system(cmd[6],intern = T)
# reads count
cmd <- paste0("grep -o -P '(?<=\\scount=)[0-9]+' ",path[5:8]," | awk -F: '{n+=$1} END {print n}'" )
derep_reads <- system(cmd[1],intern = T)
clean_reads <- system(cmd[2],intern = T)
clust_reads <- system(cmd[3],intern = T)
agg_reads <- system(cmd[4],intern = T)
df <- data.frame(step=c("aligned",
"alignement qality filtering",
"demultiplexing",
"basic filtration",
"dereplication",
"obiclean",
"clustering",
"merging cluster"),
total_sequence=c(ali,
qualali,
dml,
basicfilt,
derep,
clean,
clust,
agg),
reads=c(ali,
qualali,
dml,
basicfilt,
derep_reads,
clean_reads,
clust_reads,
agg_reads)
)
write.table(df,file=outs[[1]],row.names=F,sep="\t",quote=F)
cmd2 <- paste0("bash workflow/scripts/reads_count.sh ", path[5], " derepl ", params[1])
cmd2 <- paste0("bash reads_count.sh ", path[5], " derepl ", params[1])
system(cmd2[1],intern = T)
params_names <- NULL
for (i in 2:4){
params_names <- c(params_names, tail(unlist(strsplit(params[[i]],"_")),1))
}
system(cmd3[1],intern = T)
system(cmd3[2],intern = T)
system(cmd3[3],intern = T)
#reads
cmd4 <- paste0("grep -o -P 'sample_ID=.{1,10};' ", path[3:4],"| sort | uniq -c | sed 's/sample_ID=//g' | sed 's/;//g' > ", outs[c(3,5)])
system(cmd4[1],intern = T)
system(cmd4[2],intern = T)
system(cmd5[1],intern = T)
system(cmd5[2],intern = T)
params <- list("../../results/mother_ITS2/mother_ITS2_derep",
"../../results/mother_ITS2/mother_ITS2_clean",
"../../results/mother_ITS2/mother_ITS2_clust",
"../../results/mother_ITS2/mother_ITS2_agg")
path <- list("../../results/mother_ITS2/mother_ITS2_R1R2.fastq", # total aligned reads
"../../results/mother_ITS2/mother_ITS2_R1R2_good.fastq", # after filtering
"../../results/mother_ITS2/mother_ITS2_R1R2_good_demultiplexed.fasta", # after deml
"../../results/mother_ITS2/mother_ITS2_R1R2_good_demultiplexed_basicfilt.fasta", # filt
"../../results/mother_ITS2/mother_ITS2_R1R2_good_demultiplexed_basicfilt_derepl.fasta", # dereplicated
"../../results/mother_ITS2/mother_ITS2_R1R2_good_demultiplexed_basicfilt_derepl_cleaned.fasta", # cleaned
"../../results/mother_ITS2/mother_ITS2_R1R2_good_demultiplexed_basicfilt_derepl_cleaned_cl.fasta", # clustered
"../../results/mother_ITS2/mother_ITS2_R1R2_good_demultiplexed_basicfilt_derepl_cleaned_cl_agg.fasta") # merged
outs <-list("../../results/mother_ITS2/mother_ITS2_seq_tracking.csv",
"../../results/mother_ITS2/mother_ITS2_seq_tracking_deml.txt",
"../../results/mother_ITS2/mother_ITS2_reads_tracking_deml.txt",
"../../results/mother_ITS2/mother_ITS2_seq_tracking_basfilt.txt",
"../../results/mother_ITS2/mother_ITS2_eads_tracking_basfilt.txt",
"../../results/mother_ITS2/mother_ITS2_derep.sampstat",
"../../results/mother_ITS2/mother_ITS2_clean.sampstat",
"../../results/mother_ITS2/mother_ITS2_clust.sampstat",
"../../results/mother_ITS2/mother_ITS2_agg.sampstat")
cmd3 <- paste0("bash reads_count_2.sh ", path[6:8]," ", params_names ," ", params[2:4])
cmd2 <- paste0("bash reads_count.sh ", path[5], " derepl ", params[1])
cmd5 <- paste0("bash count_dml ", path[3:4], " ", outs[c(2,4)] )
# seq count
#fastq
cmd <- paste0("grep -c '@' " ,path[1:2])
ali <- system(cmd[1],intern = T)
qualali <- system(cmd[2],intern = T)
#fasta
cmd <- paste0("grep -c '>' " ,path[3:8])
dml <- system(cmd[1],intern = T)
basicfilt <- system(cmd[2],intern = T)
derep <- system(cmd[3],intern = T)
clean <- system(cmd[4],intern = T)
clust <- system(cmd[5],intern = T)
agg <- system(cmd[6],intern = T)
# reads count
cmd <- paste0("grep -o -P '(?<=\\scount=)[0-9]+' ",path[5:8]," | awk -F: '{n+=$1} END {print n}'" )
derep_reads <- system(cmd[1],intern = T)
clean_reads <- system(cmd[2],intern = T)
clust_reads <- system(cmd[3],intern = T)
agg_reads <- system(cmd[4],intern = T)
df <- data.frame(step=c("aligned",
"alignement qality filtering",
"demultiplexing",
"basic filtration",
"dereplication",
"obiclean",
"clustering",
"merging cluster"),
total_sequence=c(ali,
qualali,
dml,
basicfilt,
derep,
clean,
clust,
agg),
reads=c(ali,
qualali,
dml,
basicfilt,
derep_reads,
clean_reads,
clust_reads,
agg_reads)
)
write.table(df,file=outs[[1]],row.names=F,sep="\t",quote=F)
system(cmd2[1],intern = T)
params_names <- NULL
for (i in 2:4){
params_names <- c(params_names, tail(unlist(strsplit(params[[i]],"_")),1))
}
cmd3 <- paste0("bash workflow/scripts/reads_count_2.sh ", path[6:8]," ", params_names ," ", params[2:4])
system(cmd3[1],intern = T)
cmd3
cmd3 <- paste0("bash reads_count_2.sh ", path[6:8]," ", params_names ," ", params[2:4])
cmd2 <- paste0("bash reads_count.sh ", path[5], " derepl ", params[1])
cmd5 <- paste0("bash count_dml ", path[3:4], " ", outs[c(2,4)] )
system(cmd3[1],intern = T)
system(cmd3[2],intern = T)
system(cmd3[3],intern = T)
#reads
cmd4 <- paste0("grep -o -P 'sample_ID=.{1,10};' ", path[3:4],"| sort | uniq -c | sed 's/sample_ID=//g' | sed 's/;//g' > ", outs[c(3,5)])
system(cmd4[1],intern = T)
system(cmd4[2],intern = T)
system(cmd5[1],intern = T)
system(cmd5[2],intern = T)
outs <-list("../../results/mother_ITS2/mother_ITS2_seq_tracking.csv",
"../../results/mother_ITS2/mother_ITS2_seq_tracking_deml.txt",
"../../results/mother_ITS2/mother_ITS2_reads_tracking_deml.txt",
"../../results/mother_ITS2/mother_ITS2_seq_tracking_basfilt.txt",
"../../results/mother_ITS2/mother_ITS2_reads_tracking_basfilt.txt",
"../../results/mother_ITS2/mother_ITS2_derep.sampstat",
"../../results/mother_ITS2/mother_ITS2_clean.sampstat",
"../../results/mother_ITS2/mother_ITS2_clust.sampstat",
"../../results/mother_ITS2/mother_ITS2_agg.sampstat")
cmd3 <- paste0("bash reads_count_2.sh ", path[6:8]," ", params_names ," ", params[2:4])
cmd2 <- paste0("bash reads_count.sh ", path[5], " derepl ", params[1])
cmd5 <- paste0("bash count_dml ", path[3:4], " ", outs[c(2,4)] )
system(cmd3[1],intern = T)
system(cmd3[2],intern = T)
system(cmd3[3],intern = T)
#reads
cmd4 <- paste0("grep -o -P 'sample_ID=.{1,10};' ", path[3:4],"| sort | uniq -c | sed 's/sample_ID=//g' | sed 's/;//g' > ", outs[c(3,5)])
system(cmd4[1],intern = T)
system(cmd4[2],intern = T)
system(cmd5[1],intern = T)
system(cmd5[2],intern = T)
# seq count
#fastq
cmd <- paste0("grep -c '@' " ,path[1:2])
ali <- system(cmd[1],intern = T)
qualali <- system(cmd[2],intern = T)
#fasta
cmd <- paste0("grep -c '>' " ,path[3:8])
dml <- system(cmd[1],intern = T)
basicfilt <- system(cmd[2],intern = T)
derep <- system(cmd[3],intern = T)
clean <- system(cmd[4],intern = T)
clust <- system(cmd[5],intern = T)
agg <- system(cmd[6],intern = T)
# reads count
cmd <- paste0("grep -o -P '(?<=\\scount=)[0-9]+' ",path[5:8]," | awk -F: '{n+=$1} END {print n}'" )
derep_reads <- system(cmd[1],intern = T)
clean_reads <- system(cmd[2],intern = T)
clust_reads <- system(cmd[3],intern = T)
agg_reads <- system(cmd[4],intern = T)
df <- data.frame(step=c("aligned",
"alignement qality filtering",
"demultiplexing",
"basic filtration",
"dereplication",
"obiclean",
"clustering",
"merging cluster"),
total_sequence=c(ali,
qualali,
dml,
basicfilt,
derep,
clean,
clust,
agg),
reads=c(ali,
qualali,
dml,
basicfilt,
derep_reads,
clean_reads,
clust_reads,
agg_reads)
)
write.table(df,file=outs[[1]],row.names=F,sep="\t",quote=F)
system(cmd2[1],intern = T)
params_names <- NULL
for (i in 2:4){
params_names <- c(params_names, tail(unlist(strsplit(params[[i]],"_")),1))
}
system(cmd3[1],intern = T)
system(cmd3[2],intern = T)
system(cmd3[3],intern = T)
system(cmd4[1],intern = T)
system(cmd4[2],intern = T)
system(cmd5[1],intern = T)
system(cmd5[2],intern = T)
params <- list("../../results/mother_glom/mother_glom_derep",
"../../results/mother_glom/mother_glom_clean",
"../../results/mother_glom/mother_glom_clust",
"../../results/mother_glom/mother_glom_agg")
path <- list("../../results/mother_glom/mother_glom_R1R2.fastq", # total aligned reads
"../../results/mother_glom/mother_glom_R1R2_good.fastq", # after filtering
"../../results/mother_glom/mother_glom_R1R2_good_demultiplexed.fasta", # after deml
"../../results/mother_glom/mother_glom_R1R2_good_demultiplexed_basicfilt.fasta", # filt
"../../results/mother_glom/mother_glom_R1R2_good_demultiplexed_basicfilt_derepl.fasta", # dereplicated
"../../results/mother_glom/mother_glom_R1R2_good_demultiplexed_basicfilt_derepl_cleaned.fasta", # cleaned
"../../results/mother_glom/mother_glom_R1R2_good_demultiplexed_basicfilt_derepl_cleaned_cl.fasta", # clustered
"../../results/mother_glom/mother_glom_R1R2_good_demultiplexed_basicfilt_derepl_cleaned_cl_agg.fasta") # merged
outs <-list("../../results/mother_glom/mother_glom_seq_tracking.csv",
"../../results/mother_glom/mother_glom_seq_tracking_deml.txt",
"../../results/mother_glom/mother_glom_reads_tracking_deml.txt",
"../../results/mother_glom/mother_glom_seq_tracking_basfilt.txt",
"../../results/mother_glom/mother_glom_reads_tracking_basfilt.txt",
"../../results/mother_glom/mother_glom_derep.sampstat",
"../../results/mother_glom/mother_glom_clean.sampstat",
"../../results/mother_glom/mother_glom_clust.sampstat",
"../../results/mother_glom/mother_glom_agg.sampstat")
cmd3 <- paste0("bash reads_count_2.sh ", path[6:8]," ", params_names ," ", params[2:4])
cmd2 <- paste0("bash reads_count.sh ", path[5], " derepl ", params[1])
cmd5 <- paste0("bash count_dml ", path[3:4], " ", outs[c(2,4)] )
# seq count
#fastq
cmd <- paste0("grep -c '@' " ,path[1:2])
ali <- system(cmd[1],intern = T)
qualali <- system(cmd[2],intern = T)
#fasta
cmd <- paste0("grep -c '>' " ,path[3:8])
dml <- system(cmd[1],intern = T)
basicfilt <- system(cmd[2],intern = T)
derep <- system(cmd[3],intern = T)
clean <- system(cmd[4],intern = T)
clust <- system(cmd[5],intern = T)
agg <- system(cmd[6],intern = T)
# reads count
cmd <- paste0("grep -o -P '(?<=\\scount=)[0-9]+' ",path[5:8]," | awk -F: '{n+=$1} END {print n}'" )
derep_reads <- system(cmd[1],intern = T)
clean_reads <- system(cmd[2],intern = T)
clust_reads <- system(cmd[3],intern = T)
agg_reads <- system(cmd[4],intern = T)
df <- data.frame(step=c("aligned",
"alignement qality filtering",
"demultiplexing",
"basic filtration",
"dereplication",
"obiclean",
"clustering",
"merging cluster"),
total_sequence=c(ali,
qualali,
dml,
basicfilt,
derep,
clean,
clust,
agg),
reads=c(ali,
qualali,
dml,
basicfilt,
derep_reads,
clean_reads,
clust_reads,
agg_reads)
)
write.table(df,file=outs[[1]],row.names=F,sep="\t",quote=F)
system(cmd2[1],intern = T)
params_names <- NULL
for (i in 2:4){
params_names <- c(params_names, tail(unlist(strsplit(params[[i]],"_")),1))
}
cmd2 <- paste0("bash reads_count.sh ", path[5], " derepl ", params[1])
cmd3 <- paste0("bash reads_count_2.sh ", path[6:8]," ", params_names ," ", params[2:4])
cmd2 <- paste0("bash reads_count.sh ", path[5], " derepl ", params[1])
cmd5 <- paste0("bash count_dml ", path[3:4], " ", outs[c(2,4)] )
system(cmd3[1],intern = T)
system(cmd3[2],intern = T)
system(cmd3[3],intern = T)
#reads
cmd4 <- paste0("grep -o -P 'sample_ID=.{1,10};' ", path[3:4],"| sort | uniq -c | sed 's/sample_ID=//g' | sed 's/;//g' > ", outs[c(3,5)])
system(cmd4[1],intern = T)
system(cmd4[2],intern = T)
system(cmd5[1],intern = T)
system(cmd5[2],intern = T)
params <- list("../../results/seedling_16s/seedling_16s_derep",
"../../results/seedling_16s/seedling_16s_clean",
"../../results/seedling_16s/seedling_16s_clust",
"../../results/seedling_16s/seedling_16s_agg")
path <- list("../../results/seedling_16s/seedling_16s_R1R2.fastq", # total aligned reads
"../../results/seedling_16s/seedling_16s_R1R2_good.fastq", # after filtering
"../../results/seedling_16s/seedling_16s_R1R2_good_demultiplexed.fasta", # after deml
"../../results/seedling_16s/seedling_16s_R1R2_good_demultiplexed_basicfilt.fasta", # filt
"../../results/seedling_16s/seedling_16s_R1R2_good_demultiplexed_basicfilt_derepl.fasta", # dereplicated
"../../results/seedling_16s/seedling_16s_R1R2_good_demultiplexed_basicfilt_derepl_cleaned.fasta", # cleaned
"../../results/seedling_16s/seedling_16s_R1R2_good_demultiplexed_basicfilt_derepl_cleaned_cl.fasta", # clustered
"../../results/seedling_16s/seedling_16s_R1R2_good_demultiplexed_basicfilt_derepl_cleaned_cl_agg.fasta") # merged
outs <-list("../../results/seedling_16s/seedling_16s_seq_tracking.csv",
"../../results/seedling_16s/seedling_16s_seq_tracking_deml.txt",
"../../results/seedling_16s/seedling_16s_reads_tracking_deml.txt",
"../../results/seedling_16s/seedling_16s_seq_tracking_basfilt.txt",
"../../results/seedling_16s/seedling_16s_reads_tracking_basfilt.txt",
"../../results/seedling_16s/seedling_16s_derep.sampstat",
"../../results/seedling_16s/seedling_16s_clean.sampstat",
"../../results/seedling_16s/seedling_16s_clust.sampstat",
"../../results/seedling_16s/seedling_16s_agg.sampstat")
cmd3 <- paste0("bash reads_count_2.sh ", path[6:8]," ", params_names ," ", params[2:4])
cmd2 <- paste0("bash reads_count.sh ", path[5], " derepl ", params[1])
cmd5 <- paste0("bash count_dml ", path[3:4], " ", outs[c(2,4)] )
cmd <- paste0("grep -c '@' " ,path[1:2])
ali <- system(cmd[1],intern = T)
qualali <- system(cmd[2],intern = T)
#fasta
cmd <- paste0("grep -c '>' " ,path[3:8])
dml <- system(cmd[1],intern = T)
basicfilt <- system(cmd[2],intern = T)
derep <- system(cmd[3],intern = T)
clean <- system(cmd[4],intern = T)
clust <- system(cmd[5],intern = T)
agg <- system(cmd[6],intern = T)
# reads count
cmd <- paste0("grep -o -P '(?<=\\scount=)[0-9]+' ",path[5:8]," | awk -F: '{n+=$1} END {print n}'" )
derep_reads <- system(cmd[1],intern = T)
clean_reads <- system(cmd[2],intern = T)
clust_reads <- system(cmd[3],intern = T)
agg_reads <- system(cmd[4],intern = T)
df <- data.frame(step=c("aligned",
"alignement qality filtering",
"demultiplexing",
"basic filtration",
"dereplication",
"obiclean",
"clustering",
"merging cluster"),
total_sequence=c(ali,
qualali,
dml,
basicfilt,
derep,
clean,
clust,
agg),
reads=c(ali,
qualali,
dml,
basicfilt,
derep_reads,
clean_reads,
clust_reads,
agg_reads)
)
write.table(df,file=outs[[1]],row.names=F,sep="\t",quote=F)
system(cmd2[1],intern = T)
params_names <- NULL
for (i in 2:4){
params_names <- c(params_names, tail(unlist(strsplit(params[[i]],"_")),1))
}
cmd3 <- paste0("bash reads_count_2.sh ", path[6:8]," ", params_names ," ", params[2:4])
system(cmd3[1],intern = T)
system(cmd3[2],intern = T)
system(cmd3[3],intern = T)
#reads
cmd4 <- paste0("grep -o -P 'sample_ID=.{1,10};' ", path[3:4],"| sort | uniq -c | sed 's/sample_ID=//g' | sed 's/;//g' > ", outs[c(3,5)])
system(cmd4[1],intern = T)
system(cmd4[2],intern = T)
system(cmd5[1],intern = T)
system(cmd5[2],intern = T)
params <- list("../../results/seedling_ITS2/seedling_ITS2_derep",
"../../results/seedling_ITS2/seedling_ITS2_clean",
"../../results/seedling_ITS2/seedling_ITS2_clust",
"../../results/seedling_ITS2/seedling_ITS2_agg")
path <- list("../../results/seedling_ITS2/seedling_ITS2_R1R2.fastq", # total aligned reads
"../../results/seedling_ITS2/seedling_ITS2_R1R2_good.fastq", # after filtering
"../../results/seedling_ITS2/seedling_ITS2_R1R2_good_demultiplexed.fasta", # after deml
"../../results/seedling_ITS2/seedling_ITS2_R1R2_good_demultiplexed_basicfilt.fasta", # filt
"../../results/seedling_ITS2/seedling_ITS2_R1R2_good_demultiplexed_basicfilt_derepl.fasta", # dereplicated
"../../results/seedling_ITS2/seedling_ITS2_R1R2_good_demultiplexed_basicfilt_derepl_cleaned.fasta", # cleaned
"../../results/seedling_ITS2/seedling_ITS2_R1R2_good_demultiplexed_basicfilt_derepl_cleaned_cl.fasta", # clustered
"../../results/seedling_ITS2/seedling_ITS2_R1R2_good_demultiplexed_basicfilt_derepl_cleaned_cl_agg.fasta") # merged
outs <-list("../../results/seedling_ITS2/seedling_ITS2_seq_tracking.csv",
"../../results/seedling_ITS2/seedling_ITS2_seq_tracking_deml.txt",
"../../results/seedling_ITS2/seedling_ITS2_reads_tracking_deml.txt",
"../../results/seedling_ITS2/seedling_ITS2_seq_tracking_basfilt.txt",
"../../results/seedling_ITS2/seedling_ITS2_reads_tracking_basfilt.txt",
"../../results/seedling_ITS2/seedling_ITS2_derep.sampstat",
"../../results/seedling_ITS2/seedling_ITS2_clean.sampstat",
"../../results/seedling_ITS2/seedling_ITS2_clust.sampstat",
"../../results/seedling_ITS2/seedling_ITS2_agg.sampstat")
cmd3 <- paste0("bash reads_count_2.sh ", path[6:8]," ", params_names ," ", params[2:4])
cmd2 <- paste0("bash reads_count.sh ", path[5], " derepl ", params[1])
cmd5 <- paste0("bash count_dml ", path[3:4], " ", outs[c(2,4)] )
cmd <- paste0("grep -c '@' " ,path[1:2])
ali <- system(cmd[1],intern = T)
qualali <- system(cmd[2],intern = T)
#fasta
cmd <- paste0("grep -c '>' " ,path[3:8])
dml <- system(cmd[1],intern = T)
basicfilt <- system(cmd[2],intern = T)
derep <- system(cmd[3],intern = T)
clean <- system(cmd[4],intern = T)
clust <- system(cmd[5],intern = T)
agg <- system(cmd[6],intern = T)
# reads count
cmd <- paste0("grep -o -P '(?<=\\scount=)[0-9]+' ",path[5:8]," | awk -F: '{n+=$1} END {print n}'" )
derep_reads <- system(cmd[1],intern = T)
clean_reads <- system(cmd[2],intern = T)
clust_reads <- system(cmd[3],intern = T)
agg_reads <- system(cmd[4],intern = T)
df <- data.frame(step=c("aligned",
"alignement qality filtering",
"demultiplexing",
"basic filtration",
"dereplication",
"obiclean",
"clustering",
"merging cluster"),
total_sequence=c(ali,
qualali,
dml,
basicfilt,
derep,
clean,
clust,
agg),
reads=c(ali,
qualali,
dml,
basicfilt,
derep_reads,
clean_reads,
clust_reads,
agg_reads)
)
write.table(df,file=outs[[1]],row.names=F,sep="\t",quote=F)
# Sample wi
system(cmd2[1],intern = T)
params_names <- NULL
for (i in 2:4){
params_names <- c(params_names, tail(unlist(strsplit(params[[i]],"_")),1))
}
system(cmd3[1],intern = T)
system(cmd3[2],intern = T)
system(cmd3[3],intern = T)
#reads
cmd4 <- paste0("grep -o -P 'sample_ID=.{1,10};' ", path[3:4],"| sort | uniq -c | sed 's/sample_ID=//g' | sed 's/;//g' > ", outs[c(3,5)])
system(cmd4[1],intern = T)
system(cmd4[2],intern = T)
system(cmd5[1],intern = T)
system(cmd5[2],intern = T)
params_names <- NULL
for (i in 2:4){
params_names <- c(params_names, tail(unlist(strsplit(params[[i]],"_")),1))
}
params_names
params[2:4]
params_names
path[6:8]
params_names <- NULL
for (i in 2:4){
params_names <- c(params_names, tail(unlist(strsplit(params[[i]],"_")),1))
}
params[2:4]
path[6:8]
cmd2
cmd3
cmd
?save.image
list_files <- list.files("../../OBIholo_test/results/")
list_motus <- list()
list_reads <- list()
list_filters <- list()
for (i in 1:length(list_files)){
current_name <- list_files[i]
list_motus[[current_name]] <- read.csv2(paste0("../../OBIholo_test/results/",current_name,"/",current_name,"_taxassigned.csv"))
list_reads[[current_name]] <- read_delim(paste0("../../OBIholo_test/results/",current_name,"/",current_name,"_R1R2_good_demultiplexed_basicfilt_derepl_cleaned_cl_agg.tab"),"\t", escape_double = F, trim_ws = T)
list_filters[[current_name]] <- read_delim(paste0("../../OBIholo_test/resources/",current_name,"/",current_name,"_ngsfilter.tab"),"\t", escape_double = F, trim_ws = T, col_names = F)
}
??assignTaxonomy
View(dada2::assignTaxonomy)
View(C_assign_taxonomy2)
View(dada2::C_assign_taxonomy2)
library(dada2)
View(C_assign_taxonomy2)
??C_assign_taxonomy
